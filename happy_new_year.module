<?php

/**
 * @file
 * Main file for the happy_new_year module.
 */

/**
 * Implements hook_menu().
().
 */
function happy_new_year_menu() {
  $items['admin/config/media/happy_new_year'] = [
    'title' => 'Happy New Year!',
    'description' => 'A module with garland and snow decoration that creates longlasting atmosphere of New Year for you and the users of your website.',
    'page callback' => 'backdrop_get_form',
    'page arguments' => ['happy_new_year_settings_form'],
    'access arguments' => ['administer site configuration'],
  ];

  return $items;
}

/**
 * Implements hook_config_info().
 */
function happy_new_year_config_info() {
  $prefixes['happy_new_year.settings'] = array(
    'label' => t('Happy New Year settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Form settings.
 */
function happy_new_year_settings_form() {
  $config = config('happy_new_year.settings');
  $days = [];
  for ($i = 1; $i <= 31; $i++) {
    $days[] = $i;
  }
  $form = array();
  $form['#config'] = 'happy_new_year.settings';

  $form['period'] = [
    '#type' => 'fieldset',
    '#title' => t('Working period'),
  ];
  $form['period']['happy_new_year_period'] = [
    '#type' => 'checkbox',
    '#title' => t('Enable working period'),
    '#default_value' => $config->get('happy_new_year_period'),
    '#description' => t('If the working period is not specified, the module will run all the time'),
  ];
  $form['period']['period_dates'] = [
    '#type' => 'fieldset',
    '#title' => t('Select start date and end date'),
    '#states' => [
      'visible' => [
        '#edit-happy-new-year-period' => ['checked' => TRUE],
      ],
    ],
  ];
  $form['period']['period_dates']['happy_new_year_start'] = [
    '#type' => 'select',
    '#title' => t('Start day (December)'),
    '#options' => $days,
    '#default_value' => $config->get('happy_new_year_start'),
  ];
  $form['period']['period_dates']['happy_new_year_end'] = [
    '#type' => 'select',
    '#title' => t('End day (January)'),
    '#options' => $days,
    '#default_value' => $config->get('happy_new_year_end'),
  ];
  $form['snow_and_garland'] = [
    '#type' => 'fieldset',
    '#title' => t('Garland and Snow'),
  ];
  $form['snow_and_garland']['happy_new_year_garland'] = [
    '#type' => 'checkbox',
    '#title' => t('Enable garland'),
    '#default_value' => $config->get('happy_new_year_garland'),
  ];
  $form['snow_and_garland']['garland_settings'] = [
    '#type' => 'fieldset',
    '#title' => t('Garland settings'),
    '#states' => [
      'visible' => [
        '#edit-happy-new-year-garland' => ['checked' => TRUE],
      ],
    ],
  ];
  $form['snow_and_garland']['garland_settings']['happy_new_year_garland_topfixed'] = [
    '#type' => 'checkbox',
    '#title' => t('Top-Fixed garland'),
    '#default_value' => $config->get('happy_new_year_garland_topfixed'),
  ];
  $form['snow_and_garland']['garland_settings']['happy_new_year_garland_coretoolbar'] = [
    '#type' => 'checkbox',
    '#title' => t('Backdrop core toolbar is used (add garland after toolbar)'),
    '#default_value' => $config->get('happy_new_year_garland_coretoolbar'),
  ];
  $form['snow_and_garland']['garland_settings']['happy_new_year_garland_bootstrapfixed'] = [
    '#type' => 'checkbox',
    '#title' => t('Bootstrap navbar-fixed is used (add garland after navbar)'),
    '#default_value' => $config->get('happy_new_year_garland_bootstrapfixed'),
  ];
  $form['snow_and_garland']['garland_settings']['happy_new_year_garland_adminmenu'] = [
    '#type' => 'checkbox',
    '#title' => t('admin_menu is used (add garland after menu)'),
    '#default_value' => $config->get('happy_new_year_garland_adminmenu'),
  ];
  $form['snow_and_garland']['garland_settings']['happy_new_year_garland_custommargin'] = [
    '#type' => 'checkbox',
    '#title' => t('Use custom top margin'),
    '#default_value' => $config->get('happy_new_year_garland_custommargin'),
  ];
  $form['snow_and_garland']['garland_settings']['happy_new_year_garland_custommargintext'] = [
    '#type' => 'textfield',
    '#title' => t('Enter custom top margin'),
    '#default_value' => $config->get('happy_new_year_garland_custommargintext'),
    '#maxlength' => 7,
    '#size' => 7,
    '#states' => [
      'visible' => [
        '#edit-happy-new-year-garland-custommargin' => ['checked' => TRUE],
      ],
    ],
  ];
  $form['snow_and_garland']['happy_new_year_snow'] = [
    '#type' => 'checkbox',
    '#title' => t('Enable snow'),
    '#default_value' => $config->get('happy_new_year_snow'),
  ];
  $form['snow_and_garland']['snow_settings'] = [
    '#type' => 'fieldset',
    '#title' => t('Snow settings'),
    '#states' => [
      'visible' => [
        '#edit-happy-new-year-snow' => ['checked' => TRUE],
      ],
    ],
  ];
  $form['snow_and_garland']['snow_settings']['happy_new_year_snowcolor'] = [
    '#type' => 'textfield',
    '#title' => t('Snow color'),
    '#suffix' => '<div id="color-picker"></div>',
    '#default_value' => $config->get('happy_new_year_snowcolor'),
    '#maxlength' => 7,
    '#size' => 7,
    '#attached' => [
      'library' => [['system', 'farbtastic']],
      'js' => [backdrop_get_path('module', 'happy_new_year') . '/js/colorpicker.js'],
    ],
  ];
  $form['happy_new_year_minified'] = [
    '#type' => 'checkbox',
    '#title' => t('Use minified libraries (recommended for production)'),
    '#default_value' => $config->get('happy_new_year_minified'),
  ];
  $form['happy_new_year_cdn'] = [
    '#type' => 'checkbox',
    '#title' => t('Load libraries from CDN (github)'),
    '#description' => t('If you want to load libraries from local directory use /sites/all/libraries directory'),
    '#default_value' => $config->get('happy_new_year_cdn'),
  ];

  return system_settings_form($form);
}

/**
 * Helper function.
 */
function _happy_new_year_isholidaytime() {
  $config = config('happy_new_year.settings');
  $start = $config->get('happy_new_year_start') + 1;
  $end = $config->get('happy_new_year_end') + 1;

  if (date('m') == 12 && date('d') >= $start) {
    return TRUE;
  }
  elseif (date('m') == 1 && date('d') <= $end) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Implements hook_preprocess_HOOK().
().
 */
function happy_new_year_preprocess_page(&$variables) {
  $config = config('happy_new_year.settings');
  if (($config->get('happy_new_year_period')) && !_happy_new_year_isholidaytime()) {
    return;
  }

  $module_path = backdrop_get_path('module', 'happy_new_year');

  if ((!path_is_admin(current_path()))) {
    global $base_url;
    $snowLibrary = $base_url . '/sites/all/libraries/snowstorm/snowstorm.js';
    $snowLibraryMin = $base_url . '/sites/all/libraries/snowstorm/snowstorm-min.js';
    $snowLibraryCdn = 'https://cdn.jsdelivr.net/gh/ivnish/Snowstorm/snowstorm.js';
    $snowLibraryMinCdn = 'https://cdn.jsdelivr.net/gh/ivnish/Snowstorm/snowstorm-min.js';

    if ($config->get('happy_new_year_cdn')) {
      $snowLibrary = $snowLibraryCdn;
    }

    if ($config->get('happy_new_year_minified')) {
      $snowLibrary = $snowLibraryMin;

      if ($config->get('happy_new_year_cdn')) {
        $snowLibrary = $snowLibraryMinCdn;
      }
    }

    if ($config->get('happy_new_year_garland')) {
      backdrop_add_js($module_path . '/js/garland.js');

      backdrop_add_css($module_path . '/css/garland.css');

      if ($config->get('happy_new_year_garland_topfixed')) {
        backdrop_add_css($module_path . '/css/garland-fixed.css');
      }
      else {
        backdrop_add_css($module_path . '/css/garland-absolute.css');
      }

      backdrop_add_js([
        'happy_new_year' => [
          'garlandCoreToolbar' => $config->get('happy_new_year_garland_coretoolbar'),
          'garlandBootstrapFixed' => $config->get('happy_new_year_garland_bootstrapfixed'),
          'garlandAdminMenu' => $config->get('happy_new_year_garland_adminmenu'),
          'garlandCustomMargin' => $config->get('happy_new_year_garland_custommargin'),
          'garlandCustomMarginText' => $config->get('happy_new_year_garland_custommargintext'),
        ],
      ], ['type' => 'setting']);
    }

    if ($config->get('happy_new_year_snow')) {
      backdrop_add_js($snowLibrary);
      backdrop_add_js($module_path . '/js/snow.js');
      backdrop_add_js([
        'happy_new_year' => [
          'snowColor' => $config->get('happy_new_year_snowcolor'),
        ],
      ], ['type' => 'setting']);
    }
  }
}

/**
 * Implements hook_help().
().
 */
function happy_new_year_help($path, $arg) {
  return '';
}
